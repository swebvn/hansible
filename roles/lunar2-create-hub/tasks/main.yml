---
- name: debug vars
  debug:
    msg: "{{ domain }} {{ bunny_api_key }} {{ bunny_storage_zone }} {{ bunny_pull_zone }}"

- name: Chmod deploy folder
  shell: chmod 755 /home/deploy

- name: Create directory for the domain
  file:
    path: "/home/deploy/{{ domain }}"
    state: directory
    mode: '0755'

- name: Clone the repository
  git:
    repo: 'git@github.com:swebvn/lucommerce.git'
    dest: "/home/deploy/{{ domain }}"
    version: 'main'
    force: true
    depth: 1
  environment:
    GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no"

- name: Setup .env file
  shell: cp .env.example .env
  args:
    chdir: "/home/deploy/{{ domain }}"

- name: Configure the .env file
  lineinfile:
    path: /home/deploy/{{ domain }}/.env
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value }}"
  with_items:
    - { key: "APP_ENV", value: "production" }
    - { key: "APP_DEBUG", value: "false" }
    - { key: "APP_URL", value: "https://{{ domain }}" }
    - { key: "BUNNY_API_KEY", value: "{{ bunny_api_key }}" }
    - { key: "BUNNY_STORAGE_ZONE", value: "{{ bunny_storage_zone }}" }
    - { key: "BUNNY_PULL_ZONE", value: "{{ bunny_pull_zone }}" }

- name: Basic Setup
  args:
    chdir: "/home/deploy/{{ domain }}"
  shell: |
    composer install --no-dev --optimize-autoloader --no-ansi --no-interaction
    php artisan key:generate
    php artisan hub:install
    php artisan storage:link
    pnpm install && pnpm run build

- name: Chown the directory
  shell: |
    chown -R deploy:deploy /home/deploy/{{ domain }}
  ignore_errors: true

- name: Setup systemd for Horizon
  template:
    src: templates/horizon.service.j2
    dest: "/etc/systemd/system/{{ domain }}-horizon.service"

- name: Start the Horizon service
  systemd:
    name: "{{ domain }}-horizon"
    state: started
    enabled: yes

- name: Setup Caddy file
  ansible.builtin.template:
    src: templates/Caddyfile.j2
    dest: /etc/caddy/Caddyfile

- name: Reload Caddy
  args:
    chdir: "/etc/caddy"
  shell: caddy reload
  ignore_errors: true

- name: Restart php-fpm
  service:
    name: php8.2-fpm
    state: restarted
  ignore_errors: true

- name: Setup schedule
  cron:
    name: "{{ domain }}-schedule"
    minute: "*/1"
    job: "cd /home/deploy/{{ domain }} && php artisan schedule:run >> /dev/null 2>&1"
    user: deploy
    state: present
